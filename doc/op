
场景：
- Slave Dead
  从故障后，如果 Region 内无其他节点故障，则可以进行 AutoFailover（封禁）
  封建后有两种选择：
  a) 机器恢复后，将节点启动起来
     - 手动 enable-read
  b) 原节点不要了，新加入一个
     - osp add-unit, 新节点 A 会位于 cc 的 seed 中，Meet 新节点
     - 管理员将 A 设置为主的 Slave
     - Forget 掉故障的 Slave
     - osp kill，摘除故障节点的关联

- Master Dead
  a) 已自动重新选主（通常情况），DeadMaster 变成 Standby
     - Forget 掉故障的节点
     - osp kill，拆除故障节点关联
     - osp add-unit，添加新节点
     - Meet 新节点，并设置新节点为新主的从
  b) 主地域，主从都挂了，无法进行 AutoFailover
     最好是可以重新启动，否则就需要从其他地域迂回来恢复
     - 主地域，主从都挂了，需要设置其他地域存活的节点为 Master(SetAsMaster)
     - 在主地域新添加一个节点，设置为新主的 Slave
     - 设置新节点为主 (SetAsMaster)

- Expand
  a) 扩一个节点
     - 每个地域 osp add-unit, cc 会展示出新出现的 Free 节点
     - 将这些 FreeNode 组合成一个 ReplicaSet
     - Rebalance

- Shrink
  a) 缩一个节点
     - 将某分片上的 slots，完全迁移到其他节点（算法待实现）
     - 将 ReplicaSet 拆开
     - Forget 这些节点，进入 Free 状态
     - 摘除关联

- Add Region
  - 创建一个 OspService，添加 NumReplicaSet 个节点
  - 添加一个 Controller，加关联
  - 修改 AppConfig，添加一个新地域
  - cc 将发现一组 FreeNode（待自动）
  - 一个一个挂载即可

- 拆除 Slave(TODO)
  - Reset & Forget -> Free
  - OSP 摘除关联

- 切换 Master(TODO)
  - SetAsMaster
